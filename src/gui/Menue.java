/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contdb.gui;

import contdb.connect.DB4oEmb;
import contdb.entities.Cont;
import contdb.entities.ContPos;
import contdb.entities.ContUES;
import contdb.entities.Mietv;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thotic
 */
public class Menue extends javax.swing.JFrame {
    
    // Attribute
    DB4oEmb db4o;
    List<ContPos> listeSchreibenContPos = new LinkedList<>();
    List<Cont>    listeSchreibenCont    = new LinkedList<>();

    /**
     * Creates new form HauptMenue
     * @param db4o
     */
    public Menue(DB4oEmb db4o) {
        initComponents();
        myInitComponents();
        this.db4o = db4o;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSchreiben = new javax.swing.ButtonGroup();
        buttonGroupLesen = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelSchreiben = new javax.swing.JPanel();
        rbSchreibenMietv = new javax.swing.JRadioButton();
        rbSchreibenCont = new javax.swing.JRadioButton();
        rbSchreibenContUES = new javax.swing.JRadioButton();
        jLayeredPaneSchreiben = new javax.swing.JLayeredPane();
        subpanelSchreibenMietv = new javax.swing.JPanel();
        tfSchreibenMietvMietnr = new javax.swing.JTextField();
        tfSchreibenMietvKnr = new javax.swing.JTextField();
        tfSchreibenMietvMietdat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabSchreibenVerCont = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabSchreibenMietCont = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfSchreibenWoab = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        tfSchreibenWobis = new javax.swing.JTextField();
        btnSchreibenContHinzu = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        btnSchreibenContEntfernen = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        btnSchreibenMietvSuchen = new javax.swing.JButton();
        subpanelSchreibenCont = new javax.swing.JPanel();
        tfSchreibenContConr = new javax.swing.JTextField();
        tfSchreibenContCtnr = new javax.swing.JTextField();
        tfSchreibenContStao = new javax.swing.JTextField();
        tfSchreibenContEdat = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        subpanelSchreibenContUES = new javax.swing.JPanel();
        tfSchreibenContUESConr = new javax.swing.JTextField();
        tfSchreibenContUESCtnr = new javax.swing.JTextField();
        tfSchreibenContUESStao = new javax.swing.JTextField();
        tfSchreibenContUESEdat = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tfSchreibenContUESZhafen = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        btnEntitaetSpeichern = new javax.swing.JButton();
        panelLesen = new javax.swing.JPanel();
        rbLesenMietv = new javax.swing.JRadioButton();
        rbLesenMetadaten = new javax.swing.JRadioButton();
        jLayeredPaneLesen = new javax.swing.JLayeredPane();
        subpanelLesenMietv = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabMietvertrag = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabMetadaten = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        subpanelLesenMetadaten = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taLesenMetadaten = new javax.swing.JTextArea();
        panelLoeschen = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DB4o CONTDB");

        rbSchreibenMietv.setText("Mietv");
        rbSchreibenMietv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSchreibenMietvActionPerformed(evt);
            }
        });

        rbSchreibenCont.setText("Cont");
        rbSchreibenCont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSchreibenContActionPerformed(evt);
            }
        });

        rbSchreibenContUES.setText("ContUES");
        rbSchreibenContUES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSchreibenContUESActionPerformed(evt);
            }
        });

        jLayeredPaneSchreiben.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        subpanelSchreibenMietv.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tfSchreibenMietvKnr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSchreibenMietvKnrActionPerformed(evt);
            }
        });

        jLabel1.setText("Mietnummer:");

        jLabel2.setText("Kundennummer:");

        jLabel3.setText("Mietdatum:");

        tabSchreibenVerCont.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Conr", "Ctnr", "Stao", "Zhafen"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabSchreibenVerCont.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabSchreibenVerContMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabSchreibenVerCont);

        tabSchreibenMietCont.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Conr", "Woab", "Wobis"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tabSchreibenMietCont);

        jLabel4.setText("Verfuegbare Container:");

        jLabel5.setText("Mietliste Container:");

        jLabel7.setText("Woab:");

        jLabel19.setText("Wobis:");

        btnSchreibenContHinzu.setText("Container hinzufuegen");
        btnSchreibenContHinzu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSchreibenContHinzuActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 102, 0));
        jLabel20.setText("Info: 1<=Woab<=Wobis<=52");

        btnSchreibenContEntfernen.setText("Container entfernen");
        btnSchreibenContEntfernen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSchreibenContEntfernenActionPerformed(evt);
            }
        });

        jLabel21.setForeground(new java.awt.Color(255, 102, 0));
        jLabel21.setText("dd.mm.yyyy");

        btnSchreibenMietvSuchen.setText("Suchen");
        btnSchreibenMietvSuchen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSchreibenMietvSuchenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subpanelSchreibenMietvLayout = new javax.swing.GroupLayout(subpanelSchreibenMietv);
        subpanelSchreibenMietv.setLayout(subpanelSchreibenMietvLayout);
        subpanelSchreibenMietvLayout.setHorizontalGroup(
            subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelSchreibenMietvLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subpanelSchreibenMietvLayout.createSequentialGroup()
                        .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(30, 30, 30)
                        .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfSchreibenMietvMietnr, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(tfSchreibenMietvKnr)
                            .addComponent(tfSchreibenMietvMietdat))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21))
                    .addGroup(subpanelSchreibenMietvLayout.createSequentialGroup()
                        .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(subpanelSchreibenMietvLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfSchreibenWoab, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfSchreibenWobis, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSchreibenMietvSuchen, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addGroup(subpanelSchreibenMietvLayout.createSequentialGroup()
                                .addComponent(btnSchreibenContHinzu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSchreibenContEntfernen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        subpanelSchreibenMietvLayout.setVerticalGroup(
            subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelSchreibenMietvLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenMietvMietnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenMietvKnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenMietvMietdat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel21))
                .addGap(29, 29, 29)
                .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSchreibenMietvSuchen, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(subpanelSchreibenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(tfSchreibenWoab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)
                        .addComponent(tfSchreibenWobis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSchreibenContHinzu)
                        .addComponent(btnSchreibenContEntfernen)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        subpanelSchreibenCont.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setText("Containernummer:");

        jLabel9.setText("Containertypnummer:");

        jLabel10.setText("Standort:");

        jLabel11.setText("Erfassungsdatum:");

        jLabel22.setForeground(new java.awt.Color(255, 102, 0));
        jLabel22.setText("dd.mm.yyyy");

        javax.swing.GroupLayout subpanelSchreibenContLayout = new javax.swing.GroupLayout(subpanelSchreibenCont);
        subpanelSchreibenCont.setLayout(subpanelSchreibenContLayout);
        subpanelSchreibenContLayout.setHorizontalGroup(
            subpanelSchreibenContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelSchreibenContLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(subpanelSchreibenContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subpanelSchreibenContLayout.createSequentialGroup()
                        .addGroup(subpanelSchreibenContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(subpanelSchreibenContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfSchreibenContConr, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(subpanelSchreibenContLayout.createSequentialGroup()
                                .addComponent(tfSchreibenContEdat, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel22))
                            .addComponent(tfSchreibenContStao, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(subpanelSchreibenContLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfSchreibenContCtnr, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        subpanelSchreibenContLayout.setVerticalGroup(
            subpanelSchreibenContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelSchreibenContLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(subpanelSchreibenContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenContConr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(subpanelSchreibenContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenContCtnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(subpanelSchreibenContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenContStao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(8, 8, 8)
                .addGroup(subpanelSchreibenContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenContEdat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel22))
                .addContainerGap(237, Short.MAX_VALUE))
        );

        subpanelSchreibenContUES.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("Containernummer:");

        jLabel13.setText("Containertypnummer:");

        jLabel14.setText("Standort:");

        jLabel15.setText("Erfassungsdatum:");

        jLabel16.setText("Zielhafen:");

        jLabel23.setForeground(new java.awt.Color(255, 102, 0));
        jLabel23.setText("dd.mm.yyyy");

        javax.swing.GroupLayout subpanelSchreibenContUESLayout = new javax.swing.GroupLayout(subpanelSchreibenContUES);
        subpanelSchreibenContUES.setLayout(subpanelSchreibenContUESLayout);
        subpanelSchreibenContUESLayout.setHorizontalGroup(
            subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelSchreibenContUESLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subpanelSchreibenContUESLayout.createSequentialGroup()
                        .addGroup(subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(27, 27, 27)
                        .addGroup(subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfSchreibenContUESConr, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                            .addComponent(tfSchreibenContUESEdat, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                            .addComponent(tfSchreibenContUESStao, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                            .addComponent(tfSchreibenContUESZhafen, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel23))
                    .addGroup(subpanelSchreibenContUESLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfSchreibenContUESCtnr, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        subpanelSchreibenContUESLayout.setVerticalGroup(
            subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelSchreibenContUESLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenContUESConr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenContUESCtnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenContUESStao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(8, 8, 8)
                .addGroup(subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenContUESEdat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(subpanelSchreibenContUESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSchreibenContUESZhafen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap(216, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jLayeredPaneSchreibenLayout = new javax.swing.GroupLayout(jLayeredPaneSchreiben);
        jLayeredPaneSchreiben.setLayout(jLayeredPaneSchreibenLayout);
        jLayeredPaneSchreibenLayout.setHorizontalGroup(
            jLayeredPaneSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneSchreibenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(subpanelSchreibenMietv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jLayeredPaneSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPaneSchreibenLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(subpanelSchreibenCont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPaneSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPaneSchreibenLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(subpanelSchreibenContUES, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jLayeredPaneSchreibenLayout.setVerticalGroup(
            jLayeredPaneSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneSchreibenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(subpanelSchreibenMietv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(jLayeredPaneSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPaneSchreibenLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(subpanelSchreibenCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(33, Short.MAX_VALUE)))
            .addGroup(jLayeredPaneSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPaneSchreibenLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(subpanelSchreibenContUES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(28, Short.MAX_VALUE)))
        );
        jLayeredPaneSchreiben.setLayer(subpanelSchreibenMietv, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSchreiben.setLayer(subpanelSchreibenCont, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSchreiben.setLayer(subpanelSchreibenContUES, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnEntitaetSpeichern.setText("Entitaet speichern");
        btnEntitaetSpeichern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntitaetSpeichernActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSchreibenLayout = new javax.swing.GroupLayout(panelSchreiben);
        panelSchreiben.setLayout(panelSchreibenLayout);
        panelSchreibenLayout.setHorizontalGroup(
            panelSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSchreibenLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEntitaetSpeichern)
                    .addGroup(panelSchreibenLayout.createSequentialGroup()
                        .addGroup(panelSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbSchreibenContUES)
                            .addComponent(rbSchreibenCont)
                            .addComponent(rbSchreibenMietv))
                        .addGap(18, 18, 18)
                        .addComponent(jLayeredPaneSchreiben, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        panelSchreibenLayout.setVerticalGroup(
            panelSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSchreibenLayout.createSequentialGroup()
                .addGroup(panelSchreibenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSchreibenLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(rbSchreibenMietv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbSchreibenCont)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbSchreibenContUES))
                    .addGroup(panelSchreibenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLayeredPaneSchreiben, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addComponent(btnEntitaetSpeichern)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Schreiben", panelSchreiben);

        rbLesenMietv.setText("Alle Mietv Instanzen");
        rbLesenMietv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbLesenMietvActionPerformed(evt);
            }
        });

        rbLesenMetadaten.setText("Metadaten");
        rbLesenMetadaten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbLesenMetadatenActionPerformed(evt);
            }
        });

        subpanelLesenMietv.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabMietvertrag.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mietnr", "Knr", "Mietdat", "Gespreis"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabMietvertrag);

        jLabel17.setText("Mietvertrag");

        tabMetadaten.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Conr", "Woab", "Wobis", "Ctnr", "Stao", "Edat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabMetadaten);

        jLabel18.setText("Containerpositionen");

        javax.swing.GroupLayout subpanelLesenMietvLayout = new javax.swing.GroupLayout(subpanelLesenMietv);
        subpanelLesenMietv.setLayout(subpanelLesenMietvLayout);
        subpanelLesenMietvLayout.setHorizontalGroup(
            subpanelLesenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelLesenMietvLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(subpanelLesenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        subpanelLesenMietvLayout.setVerticalGroup(
            subpanelLesenMietvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelLesenMietvLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        subpanelLesenMetadaten.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        taLesenMetadaten.setColumns(20);
        taLesenMetadaten.setRows(5);
        jScrollPane3.setViewportView(taLesenMetadaten);

        javax.swing.GroupLayout subpanelLesenMetadatenLayout = new javax.swing.GroupLayout(subpanelLesenMetadaten);
        subpanelLesenMetadaten.setLayout(subpanelLesenMetadatenLayout);
        subpanelLesenMetadatenLayout.setHorizontalGroup(
            subpanelLesenMetadatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelLesenMetadatenLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        subpanelLesenMetadatenLayout.setVerticalGroup(
            subpanelLesenMetadatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subpanelLesenMetadatenLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jLayeredPaneLesenLayout = new javax.swing.GroupLayout(jLayeredPaneLesen);
        jLayeredPaneLesen.setLayout(jLayeredPaneLesenLayout);
        jLayeredPaneLesenLayout.setHorizontalGroup(
            jLayeredPaneLesenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneLesenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(subpanelLesenMietv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(jLayeredPaneLesenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPaneLesenLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(subpanelLesenMetadaten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(28, Short.MAX_VALUE)))
        );
        jLayeredPaneLesenLayout.setVerticalGroup(
            jLayeredPaneLesenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneLesenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(subpanelLesenMietv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPaneLesenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPaneLesenLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(subpanelLesenMetadaten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jLayeredPaneLesen.setLayer(subpanelLesenMietv, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneLesen.setLayer(subpanelLesenMetadaten, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelLesenLayout = new javax.swing.GroupLayout(panelLesen);
        panelLesen.setLayout(panelLesenLayout);
        panelLesenLayout.setHorizontalGroup(
            panelLesenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLesenLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelLesenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbLesenMietv)
                    .addComponent(rbLesenMetadaten))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLayeredPaneLesen)
                .addContainerGap())
        );
        panelLesenLayout.setVerticalGroup(
            panelLesenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLesenLayout.createSequentialGroup()
                .addGroup(panelLesenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLesenLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(rbLesenMietv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbLesenMetadaten))
                    .addGroup(panelLesenLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLayeredPaneLesen, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lesen", panelLesen);

        javax.swing.GroupLayout panelLoeschenLayout = new javax.swing.GroupLayout(panelLoeschen);
        panelLoeschen.setLayout(panelLoeschenLayout);
        panelLoeschenLayout.setHorizontalGroup(
            panelLoeschenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 778, Short.MAX_VALUE)
        );
        panelLoeschenLayout.setVerticalGroup(
            panelLoeschenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Loeschen", panelLoeschen);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbSchreibenMietvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSchreibenMietvActionPerformed
        subpanelSchreibenMietv.setVisible(true);
        subpanelSchreibenCont.setVisible(false);
        subpanelSchreibenContUES.setVisible(false);
        
        // Alle Eingaben loeschen
        this.tfSchreibenMietvMietnr.setText("");
        this.tfSchreibenMietvKnr.setText("");
        this.tfSchreibenMietvMietdat.setText("");
        this.tfSchreibenWoab.setText("");
        this.tfSchreibenWobis.setText("");
        
        listeSchreibenContPos.clear();
        listeSchreibenCont.clear();
        this.aktualisiereTabSchreibenVerCont();
        this.aktualisiereTabSchreibenMietCont();
        
    }//GEN-LAST:event_rbSchreibenMietvActionPerformed

    private void rbSchreibenContActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSchreibenContActionPerformed
        subpanelSchreibenMietv.setVisible(false);
        subpanelSchreibenCont.setVisible(true);
        subpanelSchreibenContUES.setVisible(false);
        
        // Alle Eingaben loeschen
        this.tfSchreibenContConr.setText("");
        this.tfSchreibenContCtnr.setText("");
        this.tfSchreibenContEdat.setText("");
        this.tfSchreibenContStao.setText("");
    }//GEN-LAST:event_rbSchreibenContActionPerformed

    private void rbSchreibenContUESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSchreibenContUESActionPerformed
        subpanelSchreibenMietv.setVisible(false);
        subpanelSchreibenCont.setVisible(false);
        subpanelSchreibenContUES.setVisible(true);
        
        // Alle Eingaben loeschen
        this.tfSchreibenContUESConr.setText("");
        this.tfSchreibenContUESCtnr.setText("");
        this.tfSchreibenContUESEdat.setText("");
        this.tfSchreibenContUESStao.setText("");
        this.tfSchreibenContUESZhafen.setText("");
    }//GEN-LAST:event_rbSchreibenContUESActionPerformed

    private void btnEntitaetSpeichernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntitaetSpeichernActionPerformed
        rbSchreibenMietv.setSelected(false);
        rbSchreibenCont.setSelected(false);
        rbSchreibenContUES.setSelected(false);
        
        if(buttonGroupSchreiben.isSelected(rbSchreibenMietv.getModel() ) ) {
            try {
                // Mietv Objekt erstellen
                int mietnr = Integer.parseInt(tfSchreibenMietvMietnr.getText());
                int knr = Integer.parseInt(tfSchreibenMietvKnr.getText());
                Date mietdat;
                if( (tfSchreibenMietvMietdat.getText()).equals("")) {
                    mietdat = new Date();
                }
                else {
                    DateFormat format = new SimpleDateFormat("dd.MM.yyyy");
                    mietdat = format.parse(tfSchreibenMietvMietdat.getText());                   
                }                             
                Mietv mietv = new Mietv(mietnr,knr,mietdat,listeSchreibenContPos);
                
                
                if(db4o.insert(mietv) == true) {
                    JOptionPane.showMessageDialog(Menue.this, "Mietvertrag gespeichert!");
                }   
                else {
                    JOptionPane.showMessageDialog(Menue.this, "Mietvertrag konnte nicht \ngespeichert werden!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(Menue.this, "Fehler bei Mietvertragerstellung!");
                System.err.println(e.getMessage());
            }
        }
        else if(buttonGroupSchreiben.isSelected(rbSchreibenCont.getModel() )) {
            try {
                int conr = Integer.parseInt(tfSchreibenContConr.getText());
                int ctnr = Integer.parseInt(tfSchreibenContCtnr.getText());
                String stao = tfSchreibenContStao.getText();
                
                Date edat;
                if( (tfSchreibenContEdat.getText()).equals("")) {
                    edat = new Date();
                }
                else {
                    DateFormat format = new SimpleDateFormat("dd.MM.yyyy");
                    edat = format.parse(tfSchreibenContEdat.getText());                   
                }

                Cont cont = new Cont(conr,ctnr,stao,edat);
                if(db4o.insert(cont) == true) {
                    JOptionPane.showMessageDialog(Menue.this, "Container gespeichert!");
                }   
                else {
                    JOptionPane.showMessageDialog(Menue.this, "Container konnte nicht \ngespeichert werden!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(Menue.this, "Fehler bei Containererstellung!");
                System.err.println(e.getMessage());
            }
        }
        else if(buttonGroupSchreiben.isSelected(rbSchreibenContUES.getModel() )) {
            try {
                int conr = Integer.parseInt(tfSchreibenContUESConr.getText());
                int ctnr = Integer.parseInt(tfSchreibenContUESCtnr.getText());
                String stao = tfSchreibenContUESStao.getText();
                String zhafen = tfSchreibenContUESZhafen.getText();
                
                Date edat;
                if( (tfSchreibenContUESEdat.getText()).equals("")) {
                    edat = new Date();
                }
                else {
                    DateFormat format = new SimpleDateFormat("dd.MM.yyyy");
                    edat = format.parse(tfSchreibenContUESEdat.getText());                   
                }

                ContUES contues = new ContUES(conr,ctnr,stao,edat,zhafen);
                if(db4o.insert(contues) == true) {
                    JOptionPane.showMessageDialog(Menue.this, "Uebersee-Container gespeichert!");
                }   
                else {
                    JOptionPane.showMessageDialog(Menue.this, "Uebersee-Container konnte nicht \ngespeichert werden!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(Menue.this, "Fehler bei Containererstellung!");
                System.err.println(e.getMessage());
            }
        }
        else {
            JOptionPane.showMessageDialog(Menue.this, "Kein Button ausgewaehlt!");
        }
    }//GEN-LAST:event_btnEntitaetSpeichernActionPerformed

    private void rbLesenMietvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbLesenMietvActionPerformed
        subpanelLesenMietv.setVisible(true);
        subpanelLesenMetadaten.setVisible(false);
        // Mietv Objekte aus Db holen
        List<Object> mietvList = db4o.read(new Mietv());
        // Und in Tabelle einfuegen
        DefaultTableModel model = (DefaultTableModel) tabMietvertrag.getModel();
        model.setRowCount(0);
        for(Object o : mietvList) {
            Mietv m = (Mietv) o;
            model.addRow(new Object [] { 
                m.getMietnr(),
                m.getKnr(),
                m.getMietdat()
            });
        }
        
    }//GEN-LAST:event_rbLesenMietvActionPerformed

    private void rbLesenMetadatenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbLesenMetadatenActionPerformed
        subpanelLesenMietv.setVisible(false);
        subpanelLesenMetadaten.setVisible(true);
        // Metadaten aus DB abfragen
        db4o.metadata();
        // Und ausgeben
        List<String> metaList = db4o.getMetadata();
        for(String s : metaList) {
            this.taLesenMetadaten.append(s+"\n");
        }
    }//GEN-LAST:event_rbLesenMetadatenActionPerformed

    private void btnSchreibenContEntfernenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSchreibenContEntfernenActionPerformed
        if(tabSchreibenMietCont.getSelectedRow() == -1) {
            if(tabSchreibenMietCont.getRowCount() == 0) {
                JOptionPane.showMessageDialog(Menue.this, "Keine Containerpositionen\n vorhanden!");
            }
            else {
                JOptionPane.showMessageDialog(Menue.this, "Keine Containerpositionen\n ausgewahlt!");
            }
        }
        else {
            int row = tabSchreibenMietCont.getSelectedRow();
            int conr = (int) tabSchreibenMietCont.getModel().getValueAt(row, 0);
            int woab = (int) tabSchreibenMietCont.getModel().getValueAt(row, 1);
            int wobis = (int) tabSchreibenMietCont.getModel().getValueAt(row, 2);
            
            // Containerposition aus DB loeschen
            System.out.println(db4o.insert(new ContPos(conr,woab,wobis)));
            
            // Containerposition aus Liste entfernen
            for(ContPos cp : listeSchreibenContPos) {
                if( (cp.getConr()==conr) && (cp.getWoab()==woab) && (cp.getWobis()==wobis) ) {
                    listeSchreibenContPos.remove(cp);
                }
            }
            aktualisiereTabSchreibenMietCont();
            aktualisiereTabSchreibenVerCont();
        }
    }//GEN-LAST:event_btnSchreibenContEntfernenActionPerformed

    private void btnSchreibenContHinzuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSchreibenContHinzuActionPerformed
        if(tabSchreibenVerCont.getSelectedRow() == -1) {
            if(tabSchreibenVerCont.getRowCount() == 0) {
                JOptionPane.showMessageDialog(Menue.this, "Keine Container\n vorhanden!");
            }
            else {
                JOptionPane.showMessageDialog(Menue.this, "Keine Container\n ausgewahlt!");
            }
        }
        else {
            // Attribute auslesen und Containerposition erzeugen
            int row   = tabSchreibenVerCont.getSelectedRow();
            int conr  = (int) tabSchreibenVerCont.getModel().getValueAt(row, 0);
            int woab  = Integer.parseInt(this.tfSchreibenWoab.getText() );
            int wobis = Integer.parseInt(this.tfSchreibenWobis.getText() );
            ContPos cp = new ContPos(conr, woab, wobis);
            
            // Containerposition in DB speichern
            System.out.println(db4o.insert(cp));
            
            // Containerposition in Liste speichern
            listeSchreibenContPos.add(cp);
            aktualisiereTabSchreibenMietCont();
            aktualisiereTabSchreibenVerCont();
        }
    }//GEN-LAST:event_btnSchreibenContHinzuActionPerformed

    private void tabSchreibenVerContMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabSchreibenVerContMouseClicked
//        try{
//            int row = tabSchreibenVerCont.getSelectedRow();
//            String conr = tabSchreibenVerCont.getModel().getValueAt(row, 0).toString();
//            tfSchreibenConr.setText(conr);
//
//            tfSchreibenWoab.setText("");
//            tfSchreibenWobis.setText("");
//        } catch (Exception e) {
//
//        }
    }//GEN-LAST:event_tabSchreibenVerContMouseClicked

    private void tfSchreibenMietvKnrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSchreibenMietvKnrActionPerformed
        // wird nicht benoetigt
    }//GEN-LAST:event_tfSchreibenMietvKnrActionPerformed

    private void btnSchreibenMietvSuchenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSchreibenMietvSuchenActionPerformed
        try{
            int woab  = Integer.parseInt(tfSchreibenWoab.getText() );
            int wobis = Integer.parseInt(tfSchreibenWobis.getText() );
            if(woab>=1 && woab<=wobis && wobis<=52) {
                this.sucheVerfuegbareCont(woab, wobis);
            }
            aktualisiereTabSchreibenVerCont();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(Menue.this, "Bitte Info fuer Woab und Wobis beachten.");
        }
    }//GEN-LAST:event_btnSchreibenMietvSuchenActionPerformed

    private void myInitComponents() {
        buttonGroupSchreiben.add(rbSchreibenMietv);
        buttonGroupSchreiben.add(rbSchreibenCont);
        buttonGroupSchreiben.add(rbSchreibenContUES);
        
        buttonGroupLesen.add(rbLesenMietv);
        buttonGroupLesen.add(rbLesenMetadaten);
        
        subpanelSchreibenMietv.setVisible(false);
        subpanelSchreibenCont.setVisible(false);
        subpanelSchreibenContUES.setVisible(false);
        
        subpanelLesenMietv.setVisible(false);
        subpanelLesenMetadaten.setVisible(false);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEntitaetSpeichern;
    private javax.swing.JButton btnSchreibenContEntfernen;
    private javax.swing.JButton btnSchreibenContHinzu;
    private javax.swing.JButton btnSchreibenMietvSuchen;
    private javax.swing.ButtonGroup buttonGroupLesen;
    private javax.swing.ButtonGroup buttonGroupSchreiben;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPaneLesen;
    private javax.swing.JLayeredPane jLayeredPaneSchreiben;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelLesen;
    private javax.swing.JPanel panelLoeschen;
    private javax.swing.JPanel panelSchreiben;
    private javax.swing.JRadioButton rbLesenMetadaten;
    private javax.swing.JRadioButton rbLesenMietv;
    private javax.swing.JRadioButton rbSchreibenCont;
    private javax.swing.JRadioButton rbSchreibenContUES;
    private javax.swing.JRadioButton rbSchreibenMietv;
    private javax.swing.JPanel subpanelLesenMetadaten;
    private javax.swing.JPanel subpanelLesenMietv;
    private javax.swing.JPanel subpanelSchreibenCont;
    private javax.swing.JPanel subpanelSchreibenContUES;
    private javax.swing.JPanel subpanelSchreibenMietv;
    private javax.swing.JTextArea taLesenMetadaten;
    private javax.swing.JTable tabMetadaten;
    private javax.swing.JTable tabMietvertrag;
    private javax.swing.JTable tabSchreibenMietCont;
    private javax.swing.JTable tabSchreibenVerCont;
    private javax.swing.JTextField tfSchreibenContConr;
    private javax.swing.JTextField tfSchreibenContCtnr;
    private javax.swing.JTextField tfSchreibenContEdat;
    private javax.swing.JTextField tfSchreibenContStao;
    private javax.swing.JTextField tfSchreibenContUESConr;
    private javax.swing.JTextField tfSchreibenContUESCtnr;
    private javax.swing.JTextField tfSchreibenContUESEdat;
    private javax.swing.JTextField tfSchreibenContUESStao;
    private javax.swing.JTextField tfSchreibenContUESZhafen;
    private javax.swing.JTextField tfSchreibenMietvKnr;
    private javax.swing.JTextField tfSchreibenMietvMietdat;
    private javax.swing.JTextField tfSchreibenMietvMietnr;
    private javax.swing.JTextField tfSchreibenWoab;
    private javax.swing.JTextField tfSchreibenWobis;
    // End of variables declaration//GEN-END:variables

    private void sucheVerfuegbareCont(int ab, int bis) {
        
        // Alle Container aus DB holen
        List<Object> listContObj = db4o.read(new Cont() );
        listeSchreibenCont.clear();
        for(Object o : listContObj) {
            listeSchreibenCont.add( (Cont) o);
        }
        // Alle Containerpoesitionen aus DB holen
        List<Object>  listContPosObj = db4o.read(new ContPos() );
        List<ContPos> listContPos    = new LinkedList<>();
        for(Object o: listContPosObj) {
            listContPos.add( (ContPos) o);
        }
        
        // Nicht verfuegbare Container aussortieren
        for(Cont c : listeSchreibenCont) {
            for(ContPos cp : listContPos) {
                if(cp.getConr()==c.getConr()) {
                    int woab  = cp.getWoab();
                    int wobis = cp.getWobis();
                    if(
                            (ab < woab && bis > woab) ||
                            (ab > woab && ab < wobis) ||
                            (bis < wobis && bis > woab) ||
                            (bis > wobis && ab < wobis)
                       ) {
                            listeSchreibenCont.remove(c);
                            //return;
                    }
                }
            }
        }
    }
    
    private void aktualisiereTabSchreibenVerCont() {
        ContUES cu;
        DefaultTableModel model = (DefaultTableModel) tabSchreibenVerCont.getModel();
        model.setRowCount(0);
        for(Cont c : listeSchreibenCont) {
            try{
                cu = (ContUES) c;
                model.addRow( new Object [] {
                    cu.getConr(), cu.getCtnr(), cu.getStao(), cu.getZhafen()
                }); 
            } catch (ClassCastException e) {
                model.addRow( new Object [] {
                    c.getConr(), c.getCtnr(), c.getStao(), "kein UES"
                });    
            }
        }    
    }
    
    private void aktualisiereTabSchreibenMietCont() {
        DefaultTableModel model = (DefaultTableModel) tabSchreibenMietCont.getModel();
        model.setRowCount(0);
        for(ContPos cp : listeSchreibenContPos) {
            model.addRow( new Object [] {
                    cp.getConr(), cp.getWoab(), cp.getWobis()
            }); 
        }     
    }
    

}
